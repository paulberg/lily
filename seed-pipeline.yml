AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CodePipeline for GitHub sourced CloudFormation deployments'

Parameters:
  GitHubOwner:
    Type: String
    Description: 'The GitHub repository owner'
  GitHubRepo: 
    Type: String
    Description: 'The GitHub repository name'
  GitHubBranch:
    Type: String 
    Default: main
    Description: 'The GitHub branch to use'
  GitHubTokenSecretName:
    Type: String
    Description: 'The name of the SecretManager secret holding the GitHub OAuth token'

Resources:
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore: 
        Type: S3
        Location: !Ref ArtifactStoreBucket
      Stages:
        - Name: Source
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty  
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Sub '{{resolve:secretsmanager:${GitHubTokenSecretName}:SecretString:token}}'
              OutputArtifacts:
                - Name: TemplateOutput  
              RoleArn: !GetAtt SourceStageRole.Arn
        - Name: Deploy
          Actions:
            - Name: CreateStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              InputArtifacts:
                - Name: TemplateOutput
              Configuration:
                ActionMode: CREATE_UPDATE 
                StackName: !Ref AWS::StackName
                TemplatePath: TemplateOutput::template.yml  
                Capabilities: CAPABILITY_NAMED_IAM
              RoleArn: !GetAtt DeployStageRole.Arn
              
  ArtifactStoreBucket:
    Type: 'AWS::S3::Bucket' 
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            NoncurrentVersionExpirationInDays: 1  
            Status: Enabled
          - Id: AbortIncompleteUploads
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true 
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption: 
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
              
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow 
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:  
        - 'arn:aws:iam::aws:policy/AWSCodePipelineReadOnlyAccess'
        
  SourceStageRole:  
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument: 
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:  
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole' 
      Policies:
        - PolicyName: SourceStageAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'  
                Resource: !Sub 'arn:aws:s3:::${ArtifactStoreBucket}/*'
              - Effect: Allow 
                Action:
                  - 'secretsmanager:GetSecretValue' 
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${GitHubTokenSecretName}-*'
                  
  DeployStageRole:
    Type: 'AWS::IAM::Role'
    Properties:  
      AssumeRolePolicyDocument:
        Version: 2012-10-17 
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: DeployStageAccess 
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'cloudformation:CreateStack' 
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'  
                  - 'cloudformation:DescribeChangeSet'
                Resource:
                  - !Sub 'arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*' 
                  - !Sub 'arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31'  
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource: !Sub 'arn:aws:s3:::${ArtifactStoreBucket}/*'  
              - Effect: Allow
                Action: 'iam:PassRole' 
                Resource: '*'
                Condition:
                  StringEquals:
                    'iam:PassedToService': 'cloudformation.amazonaws.com'
        - PolicyName: DenyIAMPermissions
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Effect: Deny 
                Action:
                  - 'iam:Create*'  
                  - 'iam:Update*'
                  - 'iam:Delete*'
                  - 'iam:Attach*' 
                  - 'iam:Detach*'
                  - 'iam:Put*' 
                Resource: '*'
        - PolicyName: DenyCloudFormationPermissions
          PolicyDocument:
            Version: 2012-10-17 
            Statement:
              - Effect: Deny
                Action: 
                  - 'cloudformation:CreateUploadBucket'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:SetStackPolicy'  
                Resource: '*'
